services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dockerhub
      args:
      - SKIP_BUILD=true
    env_file: .env
    environment:
      - PUBLIC_NETWORK=31337
      - CACHE_REDIS_CONNECTION_STRING=redis://redis:6379
      - E2E_FAKE_PINATA_URL=http://fake-pinata:3000
      - GQL_URL=http://graphql-api:8080
      - GQL_ACCESS_TOKEN=123
    entrypoint: npm run dev -- --host 0.0.0.0
    volumes:
    - .:/app
    - /app/node_modules
    ports:
    - 5173:5173
    depends_on:
    - redis
    - graphql-api
    - fake-pinata

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
    - 6379:6379

  event-processor:
    image: 'j537/event-processor:${BRANCH}-localtestnet'
    pull_policy: always
    environment:
      - PUBLIC_IPFS_GATEWAY_URL=http://fake-pinata:3000
      - SHOULD_PROCESS_PAST_EVENTS=${EVENT_PROCESSOR_SHOULD_PROCESS_PAST_EVENTS}
      - PRIMARY_RPC_URL=http://testnet:8545
      - NETWORK=localtestnet
      - POLLING_INTERVAL=${EVENT_PROCESSOR_POLLING_INTERVAL}
      - CHUNK_SIZE=${EVENT_PROCESSOR_CHUNK_SIZE}
      - CONFIRMATIONS=${EVENT_PROCESSOR_CONFIRMATIONS}
      - SHOULD_START_MONITORING_UI=true
      - REDIS_CONNECTION_STRING=redis://redis:6379
      - POSTGRES_CONNECTION_STRING=postgresql://user:admin@postgres:5432/dripsdb
      - LOG_LEVEL=debug
      - MONITORING_UI_PORT=3001
    ports:
      - 3001:3001
    depends_on:
      - postgres
      - redis
      - fake-pinata

  graphql-api:
    image: 'j537/graphql-api:${BRANCH}'
    pull_policy: always
    environment:
      - 'RPC_CONFIG={"LOCALTESTNET": { "url": "http://testnet:8545" }}'
      - NODE_ENV=development
      - POSTGRES_CONNECTION_STRING=postgresql://user:admin@postgres:5432/dripsdb
      - PORT=8080
      - PRETEND_ALL_REPOS_EXIST=false
      - IPFS_GATEWAY_URL=http://fake-pinata:3000
      - DRIPS_API_KEY=123
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - fake-pinata

  testnet:
    image: 'j537/contracts:jason-docker-setup'
    pull_policy: always
    volumes:
      - testnet_data:/contracts/anvil-state.json
    ports:
      - '8545:8545'

  fake-pinata:
    image: 'j537/fake-pinata:${BRANCH}'
    pull_policy: always

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: dripsdb
      POSTGRES_INITDB_ARGS: -E UTF8 --locale=C
    ports:
      - 54320:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "dripsdb"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

volumes:
  postgres_data:
  testnet_data: