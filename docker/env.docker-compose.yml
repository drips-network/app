services:
  testnet:
    build:
      dockerfile: ./services/testnet/Dockerfile
      context: .

  graph-node-postgres:
    image: postgres
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: -E UTF8 --locale=C

  ipfs:
    image: ipfs/go-ipfs

  graph-node:
    image: graphprotocol/graph-node
    depends_on:
      - ipfs
      - graph-node-postgres
      - testnet
    environment:
      postgres_host: graph-node-postgres
      postgres_user: graph-node
      postgres_pass: postgres
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: "goerli:http://testnet:8545"
      GRAPH_LOG: info

  subgraph-deployer:
    build:
      dockerfile: ./services/subgraph-deployer/Dockerfile
      context: .
    depends_on:
      - testnet
      - graph-node

  postgres-event-processor:
    image: postgres
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: dripsdb
      POSTGRES_INITDB_ARGS: -E UTF8 --locale=C

  events-processor:
    build:
      dockerfile: ./services/events-processor/Dockerfile
      context: .
      args:
        - EVENTS_PROCESSOR_BRANCH
    depends_on:
      - postgres-event-processor

  drips-gql-api:
    build:
      dockerfile: ./services/drips-gql-api/Dockerfile
      context: .
      args:
        - GQL_API_BRANCH
    depends_on:
      - postgres-event-processor
      - events-processor
    healthcheck:
      test: ["CMD", "curl", "http://drips-gql-api:8080"]
      interval: 10s
      timeout: 20s
      retries: 10

  redis:
    image: redis:latest
    restart: unless-stopped

  fake-pinata:
    build:
      dockerfile: ./services/fake-pinata/Dockerfile
      context: .
    ports:
      - '3000:3000'
